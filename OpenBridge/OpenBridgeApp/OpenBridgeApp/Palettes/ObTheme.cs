///////////////////////////////////////////////////////////
//  ObTheme.cs
//  Implementation of the Class ObTheme
//  Generated by Enterprise Architect
//  Created on:      26-Feb-2024 16:55:27
//  Original author: Ã˜yvindMisje
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

namespace OpenBridgeApp.Palettes 
{
    public enum ObFontInstrumentType
    {
        LabelS = 0,
        LabelM,
        LabelL,
        ValueS,
        ValueSEnhanced,
        ValueM,
        ValueMEnhanced,
        ValueL,
        ValueLEnhanced,
        UnitS,
        UnitM,
        UnitL,
        StatusS,
        StatusM,
        StatusL
    }

    public enum ObFontUiType
    {
        Title = 0,
        SubTitle,
        Overline,
        Button,
        Body,
        Label,
        LabelActive
    }

    public class ObTheme 
    {
        private List<ObPaletteClass> m_Palettes;
        private List<ObFontClass> m_Fonts;

		public ObTheme()
        {
            m_Palettes = new List<ObPaletteClass>();
            m_Palettes.Add(ObPaletteClass.CreatePalette(ObPaletteType.Night));
            m_Palettes.Add(ObPaletteClass.CreatePalette(ObPaletteType.Dusk));
            m_Palettes.Add(ObPaletteClass.CreatePalette(ObPaletteType.Day));
            m_Palettes.Add(ObPaletteClass.CreatePalette(ObPaletteType.Bright));

            m_Fonts = new List<ObFontClass>();
            m_Fonts.Add(ObFontClass.CreateFont(32, 16, ObWeightType.Regular));
        }

        ~ObTheme()
        {
		}

        public ObFontClass GetFontInstrument(ObFontInstrumentType typeFont)
        {
            return m_Fonts[0];
		}

		public ObFontClass GetFontUi(ObFontUiType typeFont)
        {
            return m_Fonts[0];
        }

		public ObPaletteClass GetPalette(ObPaletteType illumination)
        {
            switch (illumination)
            {
                case ObPaletteType.Night: return m_Palettes[0];
                case ObPaletteType.Dusk: return m_Palettes[1];
                default: return m_Palettes[2];
                case ObPaletteType.Bright: return m_Palettes[3];
            }
        }

	}//end ObTheme

}//end namespace Palettes
