// !!! This file is generated by ioStudio !!!
// Generation date and time: 22.FEB.2024 07:21:31
#include "pch.h"
#pragma hdrstop
#include "BattProgSensor.h"
BattProgSensor::BattProgSensor()
{
}
BattProgSensor::~BattProgSensor()
{
}
void BattProgSensor::ReadInput(Int32 activeSlot)
{
    if (activeSlot == 0) {};
}
void BattProgSensor::Run(Int32 activeSlot)
{
    ioVarBool retBool;
    ioVarFloat in1_Float;
    ioVarFloat in2_Float;
    ioVarFloat in3_Float;
    ioVarFloat out1_Float;
    ioVarTimeInterval out2_TimeInterval;
    ioVarFloat retFloat;
    if (activeSlot == 0) {};
    in1_Float.SetValueVar(&DcDataDc12.BattAmpIn);
    in2_Float.SetValueVar(&DcDataDc12.BattAmpOut);
    in3_Float.SetValueVar(&DcDataDc12.BattVolt);
    CheckBattery(&retBool, &in1_Float, &in2_Float, &in3_Float, &out1_Float);
    MainData.IsChargActive12V.SetValueVar(&retBool);
    DcDataDc12.BattAmpAvg.SetValueVar(&out1_Float);
    
    in1_Float.SetValueVar(&DcDataDc24.BattAmpIn);
    in2_Float.SetValueVar(&DcDataDc24.BattAmpOut);
    in3_Float.SetValueVar(&DcDataDc24.BattVolt);
    CheckBattery(&retBool, &in1_Float, &in2_Float, &in3_Float, &out1_Float);
    MainData.IsChargActive24V.SetValueVar(&retBool);
    DcDataDc24.BattAmpAvg.SetValueVar(&out1_Float);
    
    in1_Float.SetValueVar(&DcDataDc12.BattAmpAvg);
    in2_Float.SetValueVar(&DcDataDc24.BattAmpAvg);
    CalcSoc(&in1_Float, &in2_Float, &out1_Float, &out2_TimeInterval);
    MainData.StatusOfCharge.SetValueVar(&out1_Float);
    MainData.TimeTo10Percent.SetValueVar(&out2_TimeInterval);
    
    GetInputVoltageCharger(&retFloat);
    MainData.StatusOfCharge.SetValueVar(&retFloat);
}
void BattProgSensor::WriteOutput(Int32 activeSlot)
{
    if (activeSlot == 0) {};
}
void BattProgSensor::CheckBattery(ioVarBool* isOK, ioVarFloat* currentIn, ioVarFloat* currentOut, ioVarFloat* voltage, ioVarFloat* currentAvg)
{
    if (isOK == NULL) {};
    if (currentIn == NULL) {};
    if (currentOut == NULL) {};
    if (voltage == NULL) {};
    if (currentAvg == NULL) {};
}
void BattProgSensor::CalcSoc(ioVarFloat* currentAvg12V, ioVarFloat* currentAvg24V, ioVarFloat* soc, ioVarTimeInterval* timeTo10Perc)
{
    if (currentAvg12V == NULL) {};
    if (currentAvg24V == NULL) {};
    if (soc == NULL) {};
    if (timeTo10Perc == NULL) {};
}
void BattProgSensor::GetInputVoltageCharger(ioVarFloat* inputVoltage)
{
    if (inputVoltage == NULL) {}
}
