// !!! This C++ file is generated by ioStudio !!!
#include "pch.h"
#pragma hdrstop
#include "SteerProgOperateM.h"
#include "Programs/ioSystemGraphics.h"
#include "Programs/ioSystemPorts.h"
SteerProgOperateM::SteerProgOperateM()
{
}
SteerProgOperateM::~SteerProgOperateM()
{
}
void SteerProgOperateM::InitializeTask(void)
{
    ioProgram::InitializeTask();
    AddPanel((ioPanel*)&AutopilotApM);
    AddPanel((ioPanel*)&CommandCpM);
    AddPanel((ioPanel*)&ModeCpM);
    AddPanel((ioPanel*)&ReferenceCpM);
}
void SteerProgOperateM::Run(Int32 activeSlot)
{
    if (activeSlot == 0) {}
}
void SteerProgOperateM::ReceiveGraphicsEvent(Int32 puidValue, ioProgramGraphicsEvent typeEvent)
{
    ioSystemGraphicsType puid = ioSystemGraphics::GetGraphicsType(puidValue);
    if (puidValue == 0) {}
    if (typeEvent == ioProgramGraphicsEvent_NotDefined) {}
    switch (puid)
    {
    case Puid_Steer_CpM_ButtTakeRequest:
        if (typeEvent == ioProgramGraphicsEvent_Clicked)
            SendData(&DataCpM.TakeCommand, ioPortProgramProtocol_System, (Int32)Nuid_NetEthernet_192_168_10_Ids_CcM_C6015_11);
        break;
    case Puid_Steer_CpM_ButtRelease:
        if (typeEvent == ioProgramGraphicsEvent_Clicked)
            SendData(&DataCpM.Release, ioPortProgramProtocol_System, (Int32)Nuid_NetEthernet_192_168_10_Ids_CcM_C6015_11);
        break;
    case Puid_Steer_CpM_ButtStandby:
        if (typeEvent == ioProgramGraphicsEvent_Clicked)
            SendData(&DataCpM.ModeStandby, ioPortProgramProtocol_System, (Int32)Nuid_NetEthernet_192_168_10_Ids_CcM_C6015_11);
        break;
    case Puid_Steer_CpM_ButtCourse:
        break;
    case Puid_Steer_CpM_ButtWork:
        break;
    } // switch
}
void SteerProgOperateM::ReceiveData(ioDataCollection* listData, ioData* data)
{
    if (listData == NULL) {}
    if (data == NULL) {}
    else if (data == &DataCpM.OnChangeCommand)
    {
        CommandCpM.TextCommandStatus.SetValueVar(&DataCpM.ActiveStation);
    }
    else if (data == &DataCpM.OnChangeSteerMode)
    {
        CommandCpM.LabelCommandStatus.SetValueVar(&DataCpM.SteerMode);
    }
    else if (data == &DataApM.OnChangeRef)
    {
        AutopilotApM.LabelApSteer.SetValueVar(&DataApM.HeadingRef);
    }
    else if (data == &DataApM.OnChangeCompass)
    {
        SendData(&DataCpM.ModeWork, ioPortProgramProtocol_System, (Int32)Nuid_NetEthernet_192_168_10_Ids_CcM_C6015_11);
    }
    else if (data == &DataApM.OnChangeRudder)
    {
    }
    else if (data == &DataApM.OnChangeThrust)
    {
    }
    else if (data == &DataApM.OnChangeEngine)
    {
    }
}
