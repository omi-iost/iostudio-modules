// !!! This C++ file is generated by ioStudio !!!
#include "pch.h"
#pragma hdrstop
#include "SteerCpDataCpM.h"
SteerCpDataCpM::SteerCpDataCpM()
{
    InitializeData();
}
SteerCpDataCpM::~SteerCpDataCpM()
{
}
void SteerCpDataCpM::InitializeData(void)
{
    SteerCpData::InitializeData();
    ActiveStationSteer.SetValueSigned(0);
    AddData((ioData*)&ActiveStationSteer, Duid_Steer_CpM_ActiveStationSteer);
    StationModeSteer.SetValueSigned(0);
    AddData((ioData*)&StationModeSteer, Duid_Steer_CpM_StationModeSteer);
    AddData((ioData*)&TakeCommandSteer, Duid_Steer_CpM_TakeCommandSteer);
    AddData((ioData*)&ReleaseCommandSteer, Duid_Steer_CpM_ReleaseCommandSteer);
    AddData((ioData*)&OnChangeCommandSteer, Duid_Steer_CpM_OnChangeCommandSteer);
    AddData((ioData*)&ModeDp, Duid_Steer_CpM_ModeDp);
    AddData((ioData*)&ModeRiver, Duid_Steer_CpM_ModeRiver);
    AddData((ioData*)&ModeTrack, Duid_Steer_CpM_ModeTrack);
    AddData((ioData*)&ModeWork, Duid_Steer_CpM_ModeWork);
    AddData((ioData*)&ModeAuto, Duid_Steer_CpM_ModeAuto);
    AddData((ioData*)&ModeStandby, Duid_Steer_CpM_ModeStandby);
    SteerMode.SetValueSigned(0);
    AddData((ioData*)&SteerMode, Duid_Steer_CpM_SteerMode);
    AddData((ioData*)&OnChangeSteerMode, Duid_Steer_CpM_OnChangeSteerMode);
    AddData((ioData*)&LeftSmall, Duid_Steer_CpM_LeftSmall);
    AddData((ioData*)&MidZero, Duid_Steer_CpM_MidZero);
    AddData((ioData*)&RightSmall, Duid_Steer_CpM_RightSmall);
    AddData((ioData*)&LeftBig, Duid_Steer_CpM_LeftBig);
    AddData((ioData*)&RightBig, Duid_Steer_CpM_RightBig);
    AddData((ioData*)&EncoderNumber, Duid_Steer_CpM_EncoderNumber);
}
