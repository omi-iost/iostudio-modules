// !!! This C++ file is generated by ioStudio !!!
#include "pch.h"
#pragma hdrstop
#include "PowOutData.h"
TypeDevicePow::TypeDevicePow()
{
}
TypeDevicePow::~TypeDevicePow()
{
}
Bool TypeDevicePow::GetActiveText(ioString* enumText)
{
    if (enumText == NULL) return FALSE;
    Int32 activeID = GetValueSigned();
    switch (activeID)
    {
    case 0: enumText->Set((ioChars)"Aft"); return TRUE;
    case 1: enumText->Set((ioChars)"Mid"); return TRUE;
    case 2: enumText->Set((ioChars)"Front"); return TRUE;
    default: enumText->Set((ioChars)"NotDefined");  return FALSE;
    } // switch
}
TypePowOut::TypePowOut()
{
}
TypePowOut::~TypePowOut()
{
}
Bool TypePowOut::GetActiveText(ioString* enumText)
{
    if (enumText == NULL) return FALSE;
    Int32 activeID = GetValueSigned();
    switch (activeID)
    {
    case 0: enumText->Set((ioChars)"ApClutch"); return TRUE;
    default: enumText->Set((ioChars)"NotDefined");  return FALSE;
    } // switch
}
PowOutData::PowOutData()
{
}
PowOutData::~PowOutData()
{
}
void PowOutData::InitializeData(void)
{
    SetListData(m_ListData, 13);
    ResetItem();
    SwitchOn.SetVariablesBuffer(m_SwitchOnVars, 1);
    SwitchOn.AddVariable(&OnOffCh);
    SwitchOff.SetVariablesBuffer(m_SwitchOffVars, 1);
    SwitchOff.AddVariable(&OnOffCh);
    OutStatus.SetVariablesBuffer(m_OutStatusVars, 8);
    OutStatus.AddVariable(&OnCh1);
    OutStatus.AddVariable(&OnCh2);
    OutStatus.AddVariable(&OnCh3);
    OutStatus.AddVariable(&OnCh4);
    OutStatus.AddVariable(&OnCh5);
    OutStatus.AddVariable(&OnCh6);
    OutStatus.AddVariable(&OnCh7);
    OutStatus.AddVariable(&OnCh8);
}
