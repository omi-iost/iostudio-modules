// !!! This C++ file is generated by ioStudio !!!
#include "pch.h"
#pragma hdrstop
#include "PowCpData.h"
StationTypePow::StationTypePow()
{
}
StationTypePow::~StationTypePow()
{
}
Bool StationTypePow::GetActiveText(ioString* enumText)
{
    if (enumText == NULL) return FALSE;
    Int32 activeID = GetValueSigned();
    switch (activeID)
    {
    case 0: enumText->Set((ioChars)"Power at Mid Deckhouse"); return TRUE;
    case 1: enumText->Set((ioChars)"Power at Aft Cockpit"); return TRUE;
    default: enumText->Set((ioChars)"NotDefined");  return FALSE;
    } // switch
}
PowModeType::PowModeType()
{
}
PowModeType::~PowModeType()
{
}
Bool PowModeType::GetActiveText(ioString* enumText)
{
    if (enumText == NULL) return FALSE;
    Int32 activeID = GetValueSigned();
    switch (activeID)
    {
    case 0: enumText->Set((ioChars)"IDLE"); return TRUE;
    case 1: enumText->Set((ioChars)"SHORE"); return TRUE;
    case 2: enumText->Set((ioChars)"DISCONNECT"); return TRUE;
    case 3: enumText->Set((ioChars)"TRANSIT"); return TRUE;
    case 4: enumText->Set((ioChars)"ENGINE"); return TRUE;
    case 5: enumText->Set((ioChars)"SAILING"); return TRUE;
    default: enumText->Set((ioChars)"NotDefined");  return FALSE;
    } // switch
}
PowCpData::PowCpData()
{
}
PowCpData::~PowCpData()
{
}
void PowCpData::InitializeData(void)
{
    SetListData(m_ListData, 13);
    ResetItem();
    OnChangeCommandPow.SetVariablesBuffer(m_OnChangeCommandPowVars, 2);
    OnChangeCommandPow.AddVariable(&ActiveStationPow);
    OnChangeCommandPow.AddVariable(&StationModePow);
    OnChangePowMode.SetVariablesBuffer(m_OnChangePowModeVars, 1);
    OnChangePowMode.AddVariable(&PowMode);
}
