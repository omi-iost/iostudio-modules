// !!! This C++ file is generated by ioStudio !!!
#include "pch.h"
#pragma hdrstop
#include "PowProgOperateM.h"
#include "Programs/ioSystemGraphics.h"
#include "Programs/ioSystemPorts.h"
PowProgOperateM::PowProgOperateM()
{
}
PowProgOperateM::~PowProgOperateM()
{
}
void PowProgOperateM::InitializeTask(void)
{
    ioProgram::InitializeTask();
    AddPanel((ioPanel*)&PanelCmdCpM);
    AddPanel((ioPanel*)&PanelOut12M);
    AddPanel((ioPanel*)&PanelOut12F);
    AddPanel((ioPanel*)&PanelOut12A);
    AddPanel((ioPanel*)&PanelOut24M);
    AddPanel((ioPanel*)&PanelOut24F);
    AddPanel((ioPanel*)&PanelOut24A);
    AddPanel((ioPanel*)&PanelOut220M);
    AddPanel((ioPanel*)&PanelOut220F);
    AddPanel((ioPanel*)&PanelOut220A);
}
void PowProgOperateM::Run(Int32 activeSlot)
{
    if (activeSlot == 0) {}
}
void PowProgOperateM::ReceiveGraphicsEvent(Int32 puidValue, ioProgramGraphicsEvent typeEvent)
{
    ioSystemGraphicsType puid = ioSystemGraphics::GetGraphicsType(puidValue);
    if (puidValue == 0) {}
    if (typeEvent == ioProgramGraphicsEvent_NotDefined) {}
    switch (puid)
    {
    case Puid_Pow_CpM_ButtTakeRequestPow:
        if (typeEvent == ioProgramGraphicsEvent_Clicked)
            SendData(&DataCmdCpM.TakeCommandPow, ioPortProgramProtocol_System, (Int32)Nuid_NetEthernet_192_168_10_Ids_CcM_C6015_11);
        break;
    } // switch
}
void PowProgOperateM::ReceiveData(ioDataCollection* listData, ioData* data)
{
    if (listData == NULL) {}
    if (data == NULL) {}
    else
    {
        ioSystemDataType duid = ioSystemData::GetDataType(data->GetDataID());
        switch (duid)
        {
        case Duid_Pow_CpM_OnChangeCommandPow:
            PanelCmdCpM.TextCommandStatusPow.SetValueVar(&DataCmdCpM.ActiveStationPow);
            break;
        } // switch
    } // else
}
