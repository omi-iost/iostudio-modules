// !!! This C++ file is generated by ioStudio !!!
#if !defined(__IOSYSTEMDATA_H)
#define __IOSYSTEMDATA_H
#include "ioSystem/Core/ioTypes.h"
#include "ioSystem/Data/ioEnumeration.h"
typedef enum
{
    Duid_NotDefined = 0,
    Duid_Ids_Consume_TakeCommandPow = 40,
    Duid_Ids_Consume_ReleaseCommandPow = 41,
    Duid_Ids_Consume_ActiveStationPow = 42,
    Duid_Ids_Consume_OnChangeCommandPow = 43,
    Duid_Ids_Consume_StationModePow = 44,
    Duid_Ids_Consume_PowModeIdle = 45,
    Duid_Ids_Consume_PowModeShore = 46,
    Duid_Ids_Consume_PowModeDisconnect = 47,
    Duid_Ids_Consume_PowModeTransitDay = 48,
    Duid_Ids_Consume_PowModeTransitNightEngine = 49,
    Duid_Ids_Consume_PowModeTransitNightSail = 50,
    Duid_Ids_Consume_PowMode = 51,
    Duid_Ids_Consume_OnChangePowMode = 52,
    Duid_Ids_Consume_IsOutputOn1 = 53,
    Duid_Ids_Consume_IsOutputOn2 = 54,
    Duid_Ids_Consume_IsOutputOn3 = 55,
    Duid_Ids_Consume_IsOutputOn4 = 56,
    Duid_Ids_Consume_IsOutputOn5 = 57,
    Duid_Ids_Consume_IsOutputOn6 = 58,
    Duid_Ids_Consume_IsOutputOn7 = 59,
    Duid_Ids_Consume_IsOutputOn8 = 60,
    Duid_Ids_Convert_VoltageInputAc = 20,
    Duid_Ids_Convert_IsChargingActive = 22,
    Duid_Ids_Convert_CurrentOutputDc = 3,
    Duid_Ids_Convert_VoltageOutputDc = 4,
    Duid_Ids_Convert_CurrentInputAc = 7,
    Duid_Ids_Convert_MaxOutCurrentDc = 23,
    Duid_Ids_Convert_VoltageInputDcDc = 24,
    Duid_Ids_Convert_VoltageOutputDcDc = 25,
    Duid_Ids_Convert_IsDcDcOutputActive = 26,
    Duid_Ids_Convert_MaxOutCurrentDcDc = 27,
    Duid_Ids_Convert_CurrentInputDcDc = 5,
    Duid_Ids_Convert_CurrentOutputDcDc = 6,
    Duid_Ids_Source_VoltageBattery = 21,
    Duid_Ids_Source_CurrentBattery = 31,
    Duid_Ids_Source_StatusOfCharge = 34,
    Duid_Ops_Consume_PowerConsumer = 61,
    Duid_Ops_Isolate_MaxFuseCurrent = 62,
    Duid_Ops_Isolate_IsFuseBlown = 63,
    Duid_Ops_Isolate_ResetFuse = 64,
    Duid_Ops_Source_BatteryChargeResistance = 65,
    Duid_Ops_Source_BatteryEnergy = 66,
    Duid_Ops_Source_VoltOutputGenerator = 67,
    Duid_Ops_Source_IsGeneratorOutputActive = 68,
    Duid_Ops_Source_MaxOutCurrentGenerator = 69,
    Duid_Ops_Source_CurrentGenerator = 70,
    Duid_Victron_Network_RequestDataCgx = 1,
    Duid_Victron_Network_ResponseDataCgx = 2,
    Duid_Victron_Network_Dc0Voltage = 8,
    Duid_Victron_Network_Dc0MidVoltage = 28,
    Duid_Victron_Network_Dc0MidVoltageDeviation = 29,
    Duid_Victron_Network_Dc0Current = 30,
    Duid_Victron_Network_Dc0Power = 32,
    Duid_Victron_Network_Dc1Voltage = 33,
    Duid_Victron_Network_Soc = 35,
    Duid_Victron_Network_ConsumedAmphours = 36,
    Duid_Victron_Network_Dc0Temperature = 37,
} ioSystemDataType;
class TypeUnit : public ioEnumeration
{
public:
    TypeUnit();
    virtual ~TypeUnit();
    virtual Bool GetActiveText(ioString* enumText);
    static const Int32 M_S = 0;
    static const Int32 KT = 1;
    static const Int32 KG = 2;
    static const Int32 NM = 3;
    static const Int32 M = 4;
    static const Int32 _C = 5;
};
class StationModeType : public ioEnumeration
{
public:
    StationModeType();
    virtual ~StationModeType();
    virtual Bool GetActiveText(ioString* enumText);
    static const Int32 NO_COMMAND = 0;
    static const Int32 TAKEN = 1;
    static const Int32 REMOTE_CONTROL = 2;
    static const Int32 TAKEN_AND_LOCKED = 3;
    static const Int32 TAKE_OVER_REQUEST = 4;
};
class ioSystemData
{
public:
    ioSystemData();
    virtual ~ioSystemData();
    static Int32 GetDataID(ioSystemDataType duid);
    static ioSystemDataType GetDataType(Int32 duidValue);
};
#endif // __IOSYSTEMDATA_H
