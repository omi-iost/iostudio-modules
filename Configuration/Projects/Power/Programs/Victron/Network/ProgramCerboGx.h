// !!! This C++ file is generated by ioStudio !!!
#if !defined(__PROGRAMCERBOGX_H)
#define __PROGRAMCERBOGX_H
#include "ioSystem/Program/Core/ioProgram.h"
#include "Programs/Ids/Convert/DataCharge.h"
#include "Programs/Victron/Network/DataCerboGx.h"
#include "Programs/Ids/Convert/DataDcDc.h"
#include "Programs/Ids/Convert/PanelCharge.h"
#include "Programs/Ids/Convert/PanelDcDc.h"
#include "ioModbus/ioPortProgramModbus.h"
class ProgramCerboGx : public ioProgram
{
public:
    ProgramCerboGx();
    virtual ~ProgramCerboGx();
    // Initialize program attributes and operations
    virtual void InitializeTask(void);
    // Receive data in program from the network (listData: List containing the data, data: Data received)
    virtual void ReceiveData(ioDataCollection* listData, ioData* data);
    // Read from inputs before running program tasks (activeSlot: Task slot ID)
    virtual void ReadInput(Int32 activeSlot);
    // Run program tasks at regular intervals (activeSlot: Task slot ID)
    virtual void RunTask(Int32 activeSlot);
    // Write to outputs after running program tasks (activeSlot: Task slot ID)
    virtual void WriteOutput(Int32 activeSlot);
    virtual void UpdateFromCergoGxData(void);
    DataCharge ChargeData;
    DataCerboGx CgxData;
    DataDcDc DcDcData;
    PanelCharge ChargePanel;
    PanelDcDc DcDcPanel;
    ioPortProgramModbus PortModbus;
protected:
    // Map system data ID to network data ID for given protocol (protocol: Type of protocol for the data, dataID: Unique ID value for the system data, returns: Unique ID value for the network data)
    virtual Int32 MapSystemDataIDToNetworkID(ioPortProgramProtocol protocol, Int32 dataID);
};
#endif // __PROGRAMCERBOGX_H
